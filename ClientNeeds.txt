Warner Transit Federal is finally going electronic with their delivery tracking. They need an electronic record of current and past deliveries 

They need a List Repository 

You need to build an app that will (repo methods): 

    Add a new delivery to the history (Create)
    
    List all en route deliveries, and all completed deliveries (Read)
    
    Update the status of a delivery (Update)
    
    Cancel a delivery (Delete)

Each delivery will need (POCO): 

    The order date                                                                                          (DateTime)
    The delivery date                                                                                       (DateTime)
    The status of the order (Scheduled, EnRoute, Complete, or Canceled)                                     (string)(bool)
    The Item number                                                                                         (int)
    The item quantity                                                                                       (int)
    The customer ID (you can assume every customer has an account with a unique ID number of some kind)     (int)



______________________________________________________________________________________________________________________________________

- Two POCOS: 
Developer, 
    Developers have Names Typeof(string) 
    ID numbers Typeof(int)
We also need to know whether or not they have access to the online learning tool: Pluralsight.(t/f) Typeof(bool)

- DevTeam
    You will need to give the POCOs Properties
        Team ID. Typeof(int)
        Team members (Developers) List<T> -> <Developer>
        Team Name Typeof(string)


- Two Repositories: DeveloperRepo, DevTeamRepo //Collections -> and we can perform actions on those collections.
    and and Repos need CRUD Methods as appropriate


- User Interface (Console Application)



Clients will typically not give you all the info you need, so you may need to use your brain and peers to fill in the blanks!




Teams need to contain their Team members (Developers) and their Team Name, and Team ID.

Our managers need to be able to add and remove members to/from a team by their unique identifier.
They should be able to see a list of existing developers to choose from and add to existing teams. Odds are, the manager will create a team, and then 
add Developers individually from the Developer Directory to that team.

Challenge: Our HR Department uses the software monthly to get a list of all our Developers that need a Pluralsight license. Create this functionality 
in the Console Application

Challenge: Some of our managers are nitpicky and would like the functionality to add multiple Developers to a team at once, rather than one by one. 
Integrate this into your application.